name: trigger_app_release.yml
on:
  workflow_call:
    inputs:
      release-tag:
        description: Tag of the release in the apps repository
        required: true
        type: string
      app-version:
        description: Released version of the app
        required: true
        type: string
    secrets:
      FLECS_WORKFLOW_AUTOMATION_KEY:
        description: GitHub App private key
        required: true
      FLECS_WORKFLOW_AUTOMATION_CLIENT_ID:
        description: GitHub App client ID
        required: true
env:
  RELEASE_TAG: ${{ inputs.release-tag }}
  APP_VERSION: ${{ inputs.app-version }}
jobs:
  trigger-release-process:
    runs-on: ubuntu-latest
    steps:
      - name: Determine APP_NAME from ${{ github.repository }}
        run: |
          echo APP_NAME=$(echo "${{ github.repository }}" | sed -nE 's/.*apps-(.+)$/\1/p') >> $GITHUB_ENV
      - name: Issue GitHub App installation access token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.FLECS_WORKFLOW_AUTOMATION_CLIENT_ID }}
          private-key: ${{ secrets.FLECS_WORKFLOW_AUTOMATION_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: flecs-apps
      - name: Trigger App release workflow
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/actions/workflows/app_release.yml/dispatches
          owner: FLECS-Technologies
          repo: flecs-apps
          data: >
            {
              "ref": "main",
              "inputs": {
                "release-tag": "${{ env.RELEASE_TAG }}",
                "app-version": "${{ env.APP_VERSION }}",
                "app-name": "${{ env.APP_NAME }}"
                }
            }
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
